Contaminado <- data.frame(rio = rep("Contaminado", 1000), mortalidad = (rnorm(1000, mean = 50, sd = 10)))
NoContaminado <- data.frame(rio = rep("No Contaminado 1", 1000), mortalidad = (rnorm(1000, mean = 40, sd = 10)))
NoContaminado2 <- data.frame(rio = rep("No Contaminado 2", 1000), mortalidad = (rnorm(1000, mean = 40, sd = 10)))
Patos <- rbind(Contaminado, NoContaminado)
Patos <- rbind(Patos, NoContaminado2)
ggplot(Patos, aes(x = rio, y = mortalidad)) + geom_boxplot()
set.seed(123)
MuestraPatos <- Patos %>% group_by(rio) %>% sample_n(20)
ggplot(MuestraPatos, aes(x = rio, y = mortalidad)) + geom_boxplot()
set.seed(2018)
MuestraPatos <- Patos %>% group_by(rio) %>% sample_n(20)
ggplot(MuestraPatos, aes(x = rio, y = mortalidad)) + geom_boxplot()
broom::tidy(aov(mortalidad ~ rio, data = MuestraPatos))
set.seed(2016)
MuestraPatos <- Patos %>% group_by(rio) %>% sample_n(20)
ggplot(MuestraPatos, aes(x = rio, y = mortalidad)) + geom_boxplot()
broom::tidy(aov(mortalidad ~ rio, data = MuestraPatos))
set.seed(2016)
MuestraPatos <- Patos %>% group_by(rio) %>% sample_n(10)
ggplot(MuestraPatos, aes(x = rio, y = mortalidad)) + geom_boxplot()
broom::tidy(aov(mortalidad ~ rio, data = MuestraPatos))
write.csv(Patos, "Patos.csv", row.names = FALSE)
write.csv(MuestraPatos, "MuestraPatos.csv", row.names = FALSE)
library(readr)
MuestraPatos <- read_csv("MuestraPatos.csv")
View(MuestraPatos)
broom::tidy(aov(mortalidad ~ rio, data = MuestraPatos))
broom::glance(aov(mortalidad ~ rio, data = MuestraPatos))
broom::tidy(aov(mortalidad ~ rio, data = MuestraPatos))
15000000/500
15000000/500000
30000000/500000
500000*3*15
20000000/500000
40/3
20000000/1500000
shiny::runApp('Practico3/MinimosCuadrados')
diet <- read.csv("diet.csv")
getwd)
getwd())
getwd()
setwd(paste0(getwd(), "/Practico4"))
diet <- read.csv("diet.csv")
colnames(diet)
data(mtcars)
t.test(mpg ~ am, data = mt.cars)
t.test(mpg ~ am, data = mtcars)
a <- t.test(mpg ~ am, data = mtcars)
a$conf.int
a$parameter
summary(a)
augment(a)
broom::augment(a)
a
?t.test
MuestraPatos <- read_csv("MuestraPatos.csv")
ggplot(MuestraPatos, aes(x = rio, y = mortalidad)) + geom_boxplot() + geom_jitter(aes(color = rio)) + theme_classic()
knitr::kable(broom::tidy(aov(mortalidad ~ rio, data = MuestraPatos))
)
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)
suppressMessages(suppressWarnings(library(tidyverse, quietly = TRUE)))
library(kableExtra)
Coso <- data.frame(Hipotesis.Nula = c("No hay error", "Error tipo 1"), Hipostesis.alternativa =c("Error tipo 2", "No hay error"))
colnames(Coso) <- c("Hipotesis nula cierta", "Hipotesis alternativa cierta")
rownames(Coso) <- c("Acepto hipótesis nula", "Acepto Hipotesis alternativa")
kable(Coso, caption = "Tabla de confusión de errores") %>% kable_styling(font_size = 40)
wilcox.test(mpg ~ am, data = mtcars)
?wilcox.test
library(readr)
dietsample <- read_csv("Practico4/dietsample.csv")
View(dietsample)
library(tidyverse)
ggplot(dietsample, aes( x = Diet, y = weightLoss)) + geom_boxplot()
ggplot(dietsample, aes( x = Diet, y = weightLoss)) + geom_boxplot() + geom_jitter(aes(color = Diet))
ggplot(dietsample, aes( x = Diet, y = weightLoss)) + geom_violin() + geom_jitter(aes(color = Diet))
summary)dietsample
summary(dietsample)
aov(weightLoss ~ Diet, data = dietsample)
library(broom)
augment(aov(weightLoss ~ Diet, data = dietsample))
DF <- augment(aov(weightLoss ~ Diet, data = dietsample))
DF$.resid
DF$.resid
hist(DF$.resid)
sd(DF$.resid)
sd(augment(aov(weightLoss ~ Diet, data = dietsample))$.resid)
library(pwr2)
pwr.1way(k=3, n=15, alpha=0.05, delta=3, sigma=2.84)
library(pwr2)
pwr.1way(k=3, n=20, alpha=0.05, delta=3, sigma=2.84)
shiny::runApp('Practico3/MinimosCuadrados')
runApp('Practico3/MinimosCuadrados')
x <- 1:10
x
sample(x, 3)
sample(x, 3)
sample(x, 3)
sample(x, 3)
sample(x, 3)
sample(x, 3)
sample(x, 3)
set.seed(123)
sample(x, 3)
set.seed(123)
set.seed(2018)
sample(x, 3)
set.seed(2018)
sample(x, 3)
set.seed(2018)
sample(x, 3)
library(readr)
diet <- read_csv("Practico4/diet.csv")
View(diet)
View(group_by(diet, Diet) %>% summarise(N = n()))
set.seed(2018)
DietN19 <- diet %>% group_by(Diet) %>% sample_n(19)
View(DietN19)
ggplot(DietN19, aes(x = Diet, y = weightLoss)) + geom_violin() + geom_jitter()
summary(aov(weightLoss ~ Diet, data = DietN19))
summary(aov(weightLoss ~ Diet, data = DietN19))
ggplot(diet, aes(x = Diet, y = weightLoss)) + geom_violin() + geom_jitter()
ggplot(diet, aes(x = Diet, y = weightLoss)) + geom_violin() + geom_jitter() + theme_dark()
ggplot(diet, aes(x = Diet, y = weightLoss)) + geom_violin() + geom_jitter() + theme_linedraw()
ggplot(diet, aes(x = Diet, y = weightLoss)) + geom_violin() + geom_jitter() + theme_test()
ggplot(DietN19, aes(x = Diet, y = weightLoss)) + geom_violin() + geom_jitter() + theme_replace()
ggplot(DietN19, aes(x = Diet, y = weightLoss)) + geom_violin() + geom_jitter() + theme_set()
ggplot(DietN19, aes(x = Diet, y = weightLoss)) + geom_violin() + geom_jitter() + theme_gray()
MuestraPatos <- read.csv("~/Documents/BioestadisticaII/Practico4/MuestraPatos.csv")
View(MuestraPatos)
Patos <- read.csv("~/Documents/BioestadisticaII/Practico4/Patos.csv")
View(Patos)
MuestraPatos <- read.csv("~/Documents/BioestadisticaII/Practico4/MuestraPatos.csv")
View(MuestraPatos)
install.packages("learnstats")
library(learnstats)
library(learnstats)
detach(learnstats)
detach("package:learnstats", unload=TRUE)
library(learnstats)
prob()
library(tidyverse)
library(caret)
library(rpart.plot)
Beer <- read_csv("Practico5/recipeData.csv") %>% select(Name, Style, OG, FG, ABV, IBU, Color) %>% rename(Nombre = Name, Estilo = Style, Gravedad_Original = OG, Gravedad_Final = FG, Grado_Alcoholico = ABV,  Amargor = IBU)
getwd()
setwd("/home/derek/Documents/BioestadisticaII/Practico5")
library(tidyverse)
library(caret)
library(rpart.plot)
Beer <- read_csv("Practico5/recipeData.csv") %>% select(Name, Style, OG, FG, ABV, IBU, Color) %>% rename(Nombre = Name, Estilo = Style, Gravedad_Original = OG, Gravedad_Final = FG, Grado_Alcoholico = ABV,  Amargor = IBU)
setwd("/home/derek/Documents/BioestadisticaII/Practico5")
library(tidyverse)
library(caret)
library(rpart.plot)
Beer <- read_csv("recipeData.csv") %>% select(Name, Style, OG, FG, ABV, IBU, Color) %>% rename(Nombre = Name, Estilo = Style, Gravedad_Original = OG, Gravedad_Final = FG, Grado_Alcoholico = ABV,  Amargor = IBU)
write.csv(Beer, "Beer.csv", row.names = FALSE)
Beer$Estilo
unique(Beer$Estilo)
sort(unique(Beer$Estilo))
dput(sort(unique(Beer$Estilo)))
BeerSimple <- Beer %>% filter(Estilo %in% c( "American IPA", "American Lager", "American Pale Ale","American Porter", "Baltic Porter", "Belgian Blond Ale", "Belgian Dubbel","Belgian Pale Ale", "Blonde Ale", "British Brown Ale","British Golden Ale", "British Strong Ale", "Brown Porter", "Classic American Pilsner", "Czech Amber Lager", "Czech Dark Lager", "Czech Pale Lager", "Czech Premium Pale Lager", "Doppelbock", "Dry Stout", "Dunkles Bock", "English Cider", "English IPA", "English Porter", "Flanders Red Ale", "Foreign Extra Stout", "German Pilsner (Pils)","Imperial IPA", "Imperial Stout", "International Amber Lager","International Dark Lager", "International Pale Lager", "Irish Extra Stout","Irish Red Ale", "Irish Stout", "Light American Lager", "London Brown Ale", "Northern English Brown","Premium American Lager", "Robust Porter", "Russian Imperial Stout", "Southern English Brown" ,"Standard American Lager", "Strong Scotch Ale", "Sweet Stout", "Traditional Bock", "Tropical Stout","Vienna Lager"))
unique(BeerSimple$Estilo)
?stringr
write.csv(BeerSimple, "BeerSimple.csv", row.names = FALSE)
str_detect(BeerSimple$Estilo, "Stout")
BeerSimple[str_detect(BeerSimple$Estilo, "Stout"),]
BeerSimple[str_detect(BeerSimple$Estilo, "Stout"),]$Estilo
unique(BeerSimple[str_detect(BeerSimple$Estilo, "Stout"),]$Estilo)
dput(unique(BeerSimple[str_detect(BeerSimple$Estilo, "Stout"),]$Estilo))
BeerStout <- BeerSimple %>%  filter(Estilo %in% c("Russian Imperial Stout", "Sweet Stout", "Dry Stout", "Foreign Extra Stout", "Imperial Stout", "Irish Stout", "Tropical Stout", "Irish Extra Stout"))
write.csv(BeerStout, "BeerStout.csv", row.names = FALSE)
library(ggplot2)
colnames(BeerStout)
ggplot(BeerStout, aes(x = Estilo, y = Amargor)) + geom_boxplot()
ggplot(BeerStout, aes(x = Estilo, y = Amargor)) + geom_boxplot() + ylim(c(0, 1000))
ggplot(BeerStout, aes(x = Estilo, y = Amargor)) + geom_boxplot() + ylim(c(0, 500))
hist(BeerStout$Amargor)
setwd("/home/derek/Documents/BioestadisticaII/Practico5")
library(tidyverse)
library(caret)
library(rpart.plot)
Beer <- read_csv("recipeData.csv") %>% select(Name, Style, OG, FG, ABV, IBU, Color) %>% rename(Nombre = Name, Estilo = Style, Gravedad_Original = OG, Gravedad_Final = FG, Grado_Alcoholico = ABV,  Amargor = IBU) %>% filter(IBU < 660)
write.csv(Beer, "Beer.csv", row.names = FALSE)
BeerSimple <- Beer %>% filter(Estilo %in% c( "American IPA", "American Lager", "American Pale Ale","American Porter", "Baltic Porter", "Belgian Blond Ale", "Belgian Dubbel","Belgian Pale Ale", "Blonde Ale", "British Brown Ale","British Golden Ale", "British Strong Ale", "Brown Porter", "Classic American Pilsner", "Czech Amber Lager", "Czech Dark Lager", "Czech Pale Lager", "Czech Premium Pale Lager", "Doppelbock", "Dry Stout", "Dunkles Bock", "English Cider", "English IPA", "English Porter", "Flanders Red Ale", "Foreign Extra Stout", "German Pilsner (Pils)","Imperial IPA", "Imperial Stout", "International Amber Lager","International Dark Lager", "International Pale Lager", "Irish Extra Stout","Irish Red Ale", "Irish Stout", "Light American Lager", "London Brown Ale", "Northern English Brown","Premium American Lager", "Robust Porter", "Russian Imperial Stout", "Southern English Brown" ,"Standard American Lager", "Strong Scotch Ale", "Sweet Stout", "Traditional Bock", "Tropical Stout","Vienna Lager"))
write.csv(BeerSimple, "BeerSimple.csv", row.names = FALSE)
BeerStout <- BeerSimple %>%  filter(Estilo %in% c("Russian Imperial Stout", "Sweet Stout", "Dry Stout", "Foreign Extra Stout", "Imperial Stout", "Irish Stout", "Tropical Stout", "Irish Extra Stout"))
write.csv(BeerStout, "BeerStout.csv", row.names = FALSE)
library(ggplot2)
ggplot(BeerStout, aes(x = Estilo, y = Amargor)) + geom_boxplot() + ylim(c(0, 500))
dput(unique(BeerSimple[str_detect(BeerSimple$Estilo, "Porter"),]$Estilo))
BeerPorter <- BeerSimple %>%  filter(Estilo %in% c("Robust Porter", "Brown Porter", "Baltic Porter", "English Porter", "American Porter"))
write.csv(BeerPorter, "BeerPorter.csv", row.names = FALSE)
ggplot(BeerPorter, aes(x = Estilo, y = Amargor)) + geom_boxplot() + ylim(c(0, 500))
B
BeerP <- BeerPorter
BeerS <- BeerStout
BeerS$Estilo <- "Stout"
BeerDark <- rbind(BeerS, BeerP)
ggplot(BeerDark, aes(x = Estilo, y = Amargor)) + geom_boxplot() + ylim(c(0, 500))
BeerP <- BeerPorter
BeerP$Estilo <- "Porter"
BeerS <- BeerStout
BeerS$Estilo <- "Stout"
BeerDark <- rbind(BeerS, BeerP)
ggplot(BeerDark, aes(x = Estilo, y = Amargor)) + geom_boxplot() + ylim(c(0, 500))
ggplot(BeerDark, aes(x = Estilo, y = Amargor)) + geom_violin() + ylim(c(0, 500))
?str_replace()
str_replace("American IPA", "IPA", "")
str_replace_all("American IPA", "IPA", "")
str_replace_all("American IPA", "IPA", "IPA")
str_replace("American IPA", "IPA", "")
str_replace("American IPA", "^((?!IPA).)*$", "")
str_replace("American IPA", "^((?!hede).)*$", "")
str_replace("American IPA", "^((?!IPA).)*$", "")
write.csv(BeerDark, "BeerDark.csv", row.names = FALSE)
c("American IPA", "American Lager", "American Pale Ale","American Porter", "Baltic Porter", "Belgian Blond Ale", "Belgian Dubbel","Belgian Pale Ale", "Blonde Ale", "British Brown Ale","British Golden Ale", "British Strong Ale", "Brown Porter", "Classic American Pilsner", "Czech Amber Lager", "Czech Dark Lager", "Czech Pale Lager", "Czech Premium Pale Lager", "Doppelbock", "Dry Stout", "Dunkles Bock", "English Cider", "English IPA", "English Porter", "Flanders Red Ale", "Foreign Extra Stout", "German Pilsner (Pils)","Imperial IPA", "Imperial Stout", "International Amber Lager","International Dark Lager", "International Pale Lager", "Irish Extra Stout","Irish Red Ale", "Irish Stout", "Light American Lager", "London Brown Ale", "Northern English Brown","Premium American Lager", "Robust Porter", "Russian Imperial Stout", "Southern English Brown" ,"Standard American Lager", "Strong Scotch Ale", "Sweet Stout", "Traditional Bock", "Tropical Stout","Vienna Lager")
str_replace(c("American IPA", "American Lager", "American Pale Ale","American Porter", "Baltic Porter", "Belgian Blond Ale", "Belgian Dubbel","Belgian Pale Ale", "Blonde Ale", "British Brown Ale","British Golden Ale", "British Strong Ale", "Brown Porter", "Classic American Pilsner", "Czech Amber Lager", "Czech Dark Lager", "Czech Pale Lager", "Czech Premium Pale Lager", "Doppelbock", "Dry Stout", "Dunkles Bock", "English Cider", "English IPA", "English Porter", "Flanders Red Ale", "Foreign Extra Stout", "German Pilsner (Pils)","Imperial IPA", "Imperial Stout", "International Amber Lager","International Dark Lager", "International Pale Lager", "Irish Extra Stout","Irish Red Ale", "Irish Stout", "Light American Lager", "London Brown Ale", "Northern English Brown","Premium American Lager", "Robust Porter", "Russian Imperial Stout", "Southern English Brown" ,"Standard American Lager", "Strong Scotch Ale", "Sweet Stout", "Traditional Bock", "Tropical Stout","Vienna Lager"), "^((?!IPA).)*$", "")
ggplot(BeerDark, aes(x = Estilo, y = Amargor)) + geom_violin()
ggplot(BeerDark, aes(x = Estilo, y = Amargor)) + geom_boxplot()
setwd("/home/derek/Documents/BioestadisticaII/Practico5")
library(tidyverse)
library(caret)
library(rpart.plot)
Beer <- read_csv("recipeData.csv") %>% select(Name, Style, OG, FG, ABV, IBU, Color) %>% rename(Nombre = Name, Estilo = Style, Gravedad_Original = OG, Gravedad_Final = FG, Grado_Alcoholico = ABV,  Amargor = IBU) %>% filter(Amargor < 660)
write.csv(Beer, "Beer.csv", row.names = FALSE)
BeerSimple <- Beer %>% filter(Estilo %in% c("American IPA", "American Lager", "American Pale Ale","American Porter", "Baltic Porter", "Belgian Blond Ale", "Belgian Dubbel","Belgian Pale Ale", "Blonde Ale", "British Brown Ale","British Golden Ale", "British Strong Ale", "Brown Porter", "Classic American Pilsner", "Czech Amber Lager", "Czech Dark Lager", "Czech Pale Lager", "Czech Premium Pale Lager", "Doppelbock", "Dry Stout", "Dunkles Bock", "English Cider", "English IPA", "English Porter", "Flanders Red Ale", "Foreign Extra Stout", "German Pilsner (Pils)","Imperial IPA", "Imperial Stout", "International Amber Lager","International Dark Lager", "International Pale Lager", "Irish Extra Stout","Irish Red Ale", "Irish Stout", "Light American Lager", "London Brown Ale", "Northern English Brown","Premium American Lager", "Robust Porter", "Russian Imperial Stout", "Southern English Brown" ,"Standard American Lager", "Strong Scotch Ale", "Sweet Stout", "Traditional Bock", "Tropical Stout","Vienna Lager"))
write.csv(BeerSimple, "BeerSimple.csv", row.names = FALSE)
BeerStout <- BeerSimple %>%  filter(Estilo %in% c("Russian Imperial Stout", "Sweet Stout", "Dry Stout", "Foreign Extra Stout", "Imperial Stout", "Irish Stout", "Tropical Stout", "Irish Extra Stout"))
write.csv(BeerStout, "BeerStout.csv", row.names = FALSE)
BeerPorter <- BeerSimple %>%  filter(Estilo %in% c("Robust Porter", "Brown Porter", "Baltic Porter", "English Porter", "American Porter"))
write.csv(BeerPorter, "BeerPorter.csv", row.names = FALSE)
BeerP <- BeerPorter
BeerP$Estilo <- "Porter"
BeerS <- BeerStout
BeerS$Estilo <- "Stout"
BeerDark <- rbind(BeerS, BeerP)
write.csv(BeerDark, "BeerDark.csv", row.names = FALSE)
library(ggplot2)
ggplot(BeerStout, aes(x = Estilo, y = Amargor)) + geom_boxplot()
ggplot(BeerPorter, aes(x = Estilo, y = Amargor)) + geom_boxplot()
ggplot(BeerDark, aes(x = Estilo, y = Amargor)) + geom_violin()
ggplot(BeerDark, aes(x = Estilo, y = Amargor)) + geom_boxplot()
ggplot(BeerDark, aes(x = Estilo, y = Amargor)) + geom_violin() + ylim(c(0, 500))
colnames(BeerDark)
ggplot(BeerDark, aes(x = Estilo, y = Grado_Alcoholico)) + geom_violin()
ggplot(BeerDark, aes(x = Grado_Alcoholico)) + geom_histogram()
ggplot(BeerDark, aes(x = Grado_Alcoholico)) + geom_histogram(aes(fill = Estilo))
ggplot(BeerDark, aes(x = Grado_Alcoholico)) + geom_histogram(aes(fill = Estilo), alpha = 0.5)
?hist
nclass.Sturges(BeerDark$Grado_Alcoholico)
ggplot(BeerDark, aes(x = Grado_Alcoholico)) + geom_histogram(aes(fill = Estilo), alpha = 0.5, bins = nclass.Sturges(BeerDark$Grado_Alcoholico))
ggplot(BeerDark, aes(x = Grado_Alcoholico)) + geom_histogram(alpha = 0.5, bins = nclass.Sturges(BeerDark$Grado_Alcoholico))
ggplot(BeerDark, aes(x = Amargor)) + geom_histogram(alpha = 0.5, bins = nclass.Sturges(BeerDark$Grado_Alcoholico))
ggplot(BeerDark, aes(x = Amargor)) + geom_histogram(aes(fill = Estilo), alpha = 0.5, bins = nclass.Sturges(BeerDark$Grado_Alcoholico))
?nclass.Sturges()
data("airquality")
airquality
?airquality
ggplot(airquality, aes(x = Ozone)) + geom_histogram(aes(fill = Month), alpha = 0.5, bins = nclass.Sturges(airquality$Ozone))
ggplot(airquality, aes(x = Ozone)) + geom_histogram(aes(fill = as.factor(Month)), alpha = 0.5, bins = nclass.Sturges(airquality$Ozone))
ggplot(airquality, aes(x = Ozone)) + geom_histogram(position = "dodge", aes(fill = as.factor(Month)), alpha = 0.5, bins = nclass.Sturges(airquality$Ozone))
ggplot(airquality, aes(x = Ozone)) + geom_histogram(bins = nclass.Sturges(airquality$Ozone))
SummAir <- airquality %>% group_by(Month) %>% summarise(Mean = mean(Ozone), SD = sd(Ozone), N = n())
SummAir
View(SummAir)
SummAir <- airquality %>% group_by(Month) %>% summarise(Mean = mean(Ozone, na.rm = TRUE), SD = sd(Ozone, na.rm = TRUE), N = n())
library(ggvis)
install.packages(ggvis)
install.packages(ggVis)
install.packages("ggvis")
library(ggvis)
SummAir <- airquality %>% filter(Month == 8)  %>% ggvis(~Ozone) %>% layer_histograms()
SummAir <- airquality %>% filter(Month == 8)  %>% ggvis(~Ozone) %>% layer_histograms()
mtcars %>% ggvis(~mpg) %>% layer_histograms()
mtcars %>% ggvis(~mpg) %>% layer_histograms(width = 2)
airquality %>% filter(Month == 8)  %>% ggvis(~Ozone) %>% layer_histograms()
airquality %>% filter(Month == 8)  %>% ggvis(~Ozone) %>% layer_histograms(width = range(Ozone)/nclass.Sturges(Ozone))
airquality %>% filter(Month == 8)  %>% ggvis(~Ozone) %>% layer_histograms(width = range(airquality$Ozone)/nclass.Sturges(airquality$Ozone))
range(airquality$Ozone)
range(airquality$Ozone, na.rm = TRUE)
SummAir <- airquality %>% group_by(Month) %>% summarise(Mean = mean(Ozone), SD = sd(Ozone), N = n())
SummAir <- airquality %>% group_by(Month) %>% summarise(Mean = mean(Ozone, na.rm = TRUE), SD = sd(Ozone, na.rm = TRUE), N = n())
AirJuly <- airquality %>% filter(Month == 7)
ggplot(AirJuly, aes(x = Ozone)) + geom_histogram(bins = nclass.Sturges(AirJuly$Ozone))
?t.test
?airquality
View(airquality)
AirJuly <- airquality %>% filter(Month == 7)
setwd("/home/derek/Documents/BioestadisticaII/Practico5")
library(tidyverse)
library(caret)
library(rpart.plot)
AirJuly <- airquality %>% filter(Month == 7)
?t.test()
t.test(AirJuly$Ozone, mu = 55)
t.test(AirJuly$Ozone, mu = 55, "less")
t.test(AirJuly$Ozone, mu = 55, alternative = "less")
t.test(AirJuly$Ozone, mu = 55, alternative = "greater")
t.test(AirJuly$Ozone, mu = 55, alternative = "less")
t.test(AirJuly$Ozone, mu = 55, alternative = "greater")
broom::glance(t.test(AirJuly$Ozone, mu = 55, alternative = "greater"))
broom::glance(t.test(AirJuly$Ozone, mu = 55))
broom::tidy(t.test(AirJuly$Ozone, mu = 55, alternative = "greater"))
t.test(AirJuly$Ozone, mu = 55, alternative = "greater")
t.test(AirJuly$Ozone, mu = 55)
t.test(AirJuly$Ozone, mu = 55, alternative = "greater")
t.test(AirJuly$Ozone, mu = 55)
View(SummAir)
AirAug <- airquality %>% filter(Month == 8)
t.test(AirAug$Ozone, mu = 55, alternative = "greater")
?data.frame
?map
AirJuly %>% split(.$Month) %>% map(~ t.test(.$Ozone, mu = 55, alternative = "greater")) %>% map(tidy) %>% reduce(rbind)
library(broom)
AirJuly %>% split(.$Month) %>% map(~ t.test(.$Ozone, mu = 55, alternative = "greater")) %>% map(tidy) %>% reduce(rbind)
AirJuly %>% split(.$Month)
airquality %>% split(.$Month) %>% map(~ t.test(.$Ozone, mu = 55, alternative = "greater")) %>% map(tidy) %>% reduce(rbind)
SummAir
t.test
MuestraPatos <- read.csv("~/Documents/BioestadisticaII/Practico4/MuestraPatos.csv")
View(MuestraPatos)
MuestraPatos
?t.test
data("women")
women
View(women)
?datasets
?data
VADeaths
sleep
Seatbelts
View(Seatbelts)
beaver1
faithful
View(faithful)
faithful$waiting
hist(faithful$waiting)
ggplot(faithful, aes(x = waiting, y = eruption))
library(tidyverse)
ggplot(faithful, aes(x = waiting, y = eruption))
ggplot(faithful, aes(x = waiting, y = eruptions)) + geom_point()
?t.test
?faithful
?t.test
data("faithful")
a <-t.test(x = faithful$waiting, mu = 60, alternative = "two.sided")
broom::augment(a)
?mtcars
?citation
citation("datasets", mtcars)
data("mtcars")
mt <- mtcars
mt$am <- ifelse(mtcars == 0, "automatico", "manual")
mt
ggplot(mt, aes(x = am, y = mpg)) + geom_boxplot()
View(mt)
ggplot(mtcars, aes(x = am, y = mpg)) + geom_boxplot()
ggplot(mtcars, aes(x = am, y = mpg)) + geom_boxplot(aes(fill = am))
ggplot(mt, aes(x = am, y = mpg)) + geom_boxplot()
ggplot(mtcars, aes(x = factor(am), y = mpg)) + geom_boxplot()
ggplot(mt, aes(x = factor(am), y = mpg)) + geom_boxplot()
str(mt)
as.data.frame(mt)
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)
suppressMessages(suppressWarnings(library(tidyverse, quietly = TRUE)))
data("mtcars")
mt <- mtcars
mt$am <- ifelse(mtcars == 0, "automatico", "manual")
mt <- as.data.frame(mt)
ggplot(mt, aes(x = am, y = mpg)) + geom_boxplot() + geom_jitter(aes(color = am))
data("mtcars")
mt <- mtcars
mt$am <- ifelse(mtcars == 0, "automatico", "manual")
mt <- as.data.frame(mt)
str(mt)
t.test(mpg ~ am, data = mt)
t.test(mpg ~ am, data = mt)
t.test
?t.test
data("mtcars")
mt <- mtcars
mt$am <- ifelse(mtcars$am  == 0, "automatico", "manual")
mt <- as.data.frame(mt)
ggplot(mt, aes(x = am, y = mpg)) + geom_boxplot() + geom_jitter(aes(color = am))
t.test(mpg ~ am, data = mt)
t.test(mpg ~ am, data = mtcars, var.equal =TRUE)
t.test(mpg ~ am, data = mtcars, var.equal =TRUE)
BeerDark <- read.csv("~/Documents/BioestadisticaII/Practico5/BeerDark.csv")
View(BeerDark)
t.test(Grado_Alcoholico ~ Estilo, data = BeerDark)
t.test(Amargor~ Estilo, data = BeerDark)
t.test(Color~ Estilo, data = BeerDark)
ggplot(BeerDark, aes(x = Estilo, y = Grado_Alcoholico)) + geom_boxplot()
ggplot(BeerDark, aes(x = Estilo, y = Amargor)) + geom_boxplot()
ggplot(BeerDark, aes(x = Estilo, y = Color)) + geom_boxplot()
colnames(BeerDark)
?combine()
combn(c("Grado_Alcoholico", "Amargor", "Color" ), m = 2, FUN = NULL, simplify = TRUE)
combn(c("Grado_Alcoholico", "Amargor", "Color" ), m = 1, FUN = NULL, simplify = TRUE)
combn(c("Grado_Alcoholico", "Amargor", "Color" ), m = 3, FUN = NULL, simplify = TRUE)
?wilcox.test
hist(faithful$waiting)
?hist
?wilcox.test
ggplot2::geom_histogram()
?ggplot2::geom_histogram()
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)
suppressMessages(suppressWarnings(library(tidyverse, quietly = TRUE)))
data("mtcars")
mt <- mtcars
mt$am <- ifelse(mtcars$am  == 0, "automatico", "manual")
mt <- as.data.frame(mt)
ggplot(mt, aes(x = am, y = mpg)) + geom_violin()
manuales <- mt %>% filter(am == "manual")
hist(manual$mpg)
?bartlett.test
filter(airquality, Month == 7)
filter(airquality, Month == 7)$Ozone
hist(filter(airquality, Month == 7)$Ozone)
qqnorm(filter(airquality, Month == 7)$Ozone)
shapiro.test(filter(airquality, Month == 7)$Ozone)
shapiro.test(filter(airquality, Month == 8)$Ozone)
hist(filter(airquality, Month == 8)$Ozone)
qqpot(filter(airquality, Month == 8)$Ozone)
qqnorm(filter(airquality, Month == 8)$Ozone)
ggplot(BeerDark, aes(x = Estilo, y = Amargor)) + geom_violin()
ggplot(BeerDark, aes(x = Estilo, y = Grado_Alcoholico)) + geom_violin()
ggplot(BeerDark, aes(x = Estilo, y = Color)) + geom_violin()
bartlett.test(Amargor ~ Estilo, data = BeerDark)
bartlett.test(Color ~ Estilo, data = BeerDark)
bartlett.test(Grado_Alcoholico ~ Estilo, data = BeerDark)
?bartlett.test
BeerPorter <- read.csv("~/Documents/BioestadisticaII/Practico5/BeerPorter.csv")
View(BeerPorter)
BeerStout <- read.csv("~/Documents/BioestadisticaII/Practico5/BeerStout.csv")
View(BeerStout)
hist(BeerPorter$Grado_Alcoholico)
hist(BeerPorter$Amargor)
hist(BeerPorter$Color)
hist(BeerPorter$Amargor)
hist(BeerStout$Amargor)
BeerDark$Estilo
wilcox.test(Amargor ~ Estilo, data = BeerDark)
library(learnstats)
s_tdist()
runApp('~/R/x86_64-pc-linux-gnu-library/3.4/learnstats/tdist')
?t.test()
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)
suppressMessages(suppressWarnings(library(tidyverse, quietly = TRUE)))
DF <- data.frame(Datos = rnorm(mean = 60,5))
ggplot(DF, aes(Datos)) + geom_density()
DF <- data.frame(Datos = rnorm(mean = 60, sd = 5))
DF <- data.frame(Datos = rnorm(n = 100, mean = 60, sd = 5))
ggplot(DF, aes(Datos)) + geom_density()
?geom_density
ggplot(diamonds, aes(carat)) +
geom_density()
ggplot(diamonds, aes(carat)) +
geom_density(adjust = 1/5)
ggplot(diamonds, aes(carat)) +
geom_density(adjust = 5)
ggplot(diamonds, aes(depth, colour = cut)) +
geom_density() +
xlim(55, 70)
ggplot(diamonds, aes(depth, fill = cut, colour = cut)) +
geom_density(alpha = 0.1) +
xlim(55, 70)
ggplot(diamonds, aes(carat, calc(count), fill = cut)) +
geom_density(position = "fill")
fortify(density(DF$Datos))
?density
fortify(density(DF))
density(DF$Datos)
a <- density(DF$Datos)
a
a$x
a$y
a$bw
DF <- density(rnorm(n = 100, mean = 60, sd = 5))
DF <- density(rnorm(n = 100, mean = 60, sd = 5))
DF <- data.frame(Value = DF$x, Frequency = DF$y)
ggplot(DF, aes(x = Value, y = Frequency)) + geom_line()
a <- rnorm(n = 100, mean = 60, sd = 5)
DF <- density(a)
DF <- data.frame(Value = DF$x, Frequency = DF$y)
ggplot(DF, aes(x = Value, y = Frequency)) + geom_line()
a <- rnorm(n = 100, mean = 60, sd = 5)
DF <- density(a)
DF <- data.frame(Value = DF$x, Frequency = DF$y)
DFPlus <- DF %>% filter(DF, Value  >= 70)
a <- rnorm(n = 100, mean = 60, sd = 5)
DF <- density(a)
DF <- data.frame(Value = DF$x, Frequency = DF$y)
DFPlus <- DF %>% dplyr::filter(DF, Value  >= 70)
a <- rnorm(n = 100, mean = 60, sd = 5)
DF <- density(a)
DF <- data.frame(Value = DF$x, Frequency = DF$y)
DF
head(DF)
DF %>% dplyr::filter(DF, Value  >= 70)
a <- rnorm(n = 100, mean = 60, sd = 5)
DF <- density(a)
DF <- data.frame(Value = DF$x, Frequency = DF$y)
DFPlus <- DF %>% dplyr::filter(Value  >= 70)
DFMinus <- DF %>% dplyr::filter(Value  <= 50)
ggplot(DF, aes(x = Value, y = Frequency)) + geom_line() + geom_ribbon(data = DFPlus, aes(ymax = Frequency, ymin = 0), color = "red")
a <- rnorm(n = 100, mean = 60, sd = 5)
DF <- density(a)
DF <- data.frame(Value = DF$x, Frequency = DF$y)
DFPlus <- DF %>% dplyr::filter(Value  >= 70)
DFMinus <- DF %>% dplyr::filter(Value  <= 50)
ggplot(DF, aes(x = Value, y = Frequency)) + geom_line() + geom_ribbon(data = DFPlus, aes(ymax = Frequency, ymin = 0), fill = "red")
