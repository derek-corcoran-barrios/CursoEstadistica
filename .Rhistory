ggplot(Poop, aes(x = cleaner, y = time)) + geom_boxplot() + geom_jitter(aes(color = cleaner))
ggplot(Poop, aes(x = cleaner, y = time)) + geom_boxplot(aes(fill =type))
summary(aov(time ~ type + cleaner + type:cleaner))
summary(aov(time ~ type + cleaner + type:cleaner, data = Poop))
summary(aov(time ~ type, data = Poop))
summary(aov(time ~ cleaner, data = Poop))
tidy(aov(time ~ cleaner, data = Poop))
glance(aov(time ~ cleaner, data = Poop))
glance(aov(time ~ type, data = Poop))
glance(aov(time ~ type + cleaner + type:cleaner, data = Poop))
ggplot(Poop, aes(x = cleaner, y = time)) + geom_boxplot() + geom_jitter(aes(color = cleaner))
ggplot(Poop, aes(time)) + geom_boxplot()
Poop$Data <- "Caca"
ggplot(Poop, aes(x = Data, y = time)) + geom_boxplot()
ggplot(Poop, aes(x = Data, y = time)) + geom_boxplot() + geom_jitter()
ggplot(Poop, aes(y = time)) + geom_boxplot() + geom_jitter(aes(color = cleaner))
ggplot(Poop, aes(y = time)) + geom_boxplot() + geom_jitter(aes(color = cleaner))
ggplot(Poop, aes(y = time)) + geom_boxplot() + geom_jitter(aes(color = cleaner))
#Understanding ANOVA
library(tidyverse)
library(broom)
Poop <- yarrr::poopdeck
Poop$Data <- "Caca"
ggplot(Poop, aes(x = type, y = time)) + geom_boxplot() + geom_jitter(aes(color = type))
ggplot(Poop, aes(x = cleaner, y = time)) + geom_boxplot() + geom_jitter(aes(color = cleaner))
ggplot(Poop, aes(x = Data, y = time)) + geom_boxplot() + geom_jitter()
ggplot(Poop, aes(x = cleaner, y = time)) + geom_boxplot(aes(fill = type))
ggplot(Poop, aes(x = Data, y = time)) + geom_boxplot() + geom_jitter()
library(tidyverse)
library(broom)
Poop <- yarrr::poopdeck
Poop$Data <- "Caca"
a <- ggplot(Poop, aes(x = type, y = time)) + geom_boxplot() + geom_jitter(aes(color = type))
b <- ggplot(Poop, aes(x = cleaner, y = time)) + geom_boxplot() + geom_jitter(aes(color = cleaner))
c <- ggplot(Poop, aes(x = cleaner, y = time)) + geom_boxplot(aes(fill = type))
d <- ggplot(Poop, aes(x = Data, y = time)) + geom_boxplot() + geom_jitter()
library(gridExtra)
grid.arrange(a,b,c,d, ncol = 2)
Poop <- yarrr::poopdeck
Poop$Data <- "Caca"
a <- ggplot(Poop, aes(x = type, y = time)) + geom_violin() + geom_jitter(aes(color = type))
b <- ggplot(Poop, aes(x = cleaner, y = time)) + geom_violin() + geom_jitter(aes(color = cleaner))
c <- ggplot(Poop, aes(x = cleaner, y = time)) + geom_violin(aes(fill = type))
d <- ggplot(Poop, aes(x = Data, y = time)) + geom_violin() + geom_jitter()
library(gridExtra)
grid.arrange(a,b,c,d, ncol = 2)
yarrr::pirates
View(yarrr::pirates)
install.packages("lme4")
data("CO2")
CO2
colnames(CO2)
ggplot(CO2, aes(x = Plant, y = uptake)) + geom_boxplot()
ggplot(CO2, aes(x = Plant, y = uptake)) + geom_boxplot() + geom_vline(xintercept = 3.5)
ggplot(CO2, aes(x = Plant, y = uptake)) + geom_boxplot() + geom_vline(xintercept = c(3.5, 9.5))
ggplot(CO2, aes(x = Plant, y = uptake)) + geom_boxplot() + geom_vline(xintercept = c(3.5, 9.5), lty = 2)
ggplot(CO2, aes(x = Plant, y = uptake)) + geom_boxplot() + geom_vline(xintercept = c(3.5, 9.5), lty = 2) + geom_vline(xintercept = 6.5, lty = 2, color = "red")
lmer(uptake  ~  Type + Treatment (1|Plant), data=CO2)
library(lme4)
data("CO2")
#Subespecie y tratamiento efectos fijos plnata efecto aleatorio
ggplot(CO2, aes(x = Plant, y = uptake)) + geom_boxplot() + geom_vline(xintercept = c(3.5, 9.5), lty = 2) + geom_vline(xintercept = 6.5, lty = 2, color = "red")
lmer(uptake  ~  Type + Treatment (1|Plant), data=CO2)
lmer(uptake  ~  Type + Treatment + (1|Plant), data=CO2)
summary(lmer(uptake  ~  Type + Treatment + (1|Plant), data=CO2))
glance(lmer(uptake  ~  Type + Treatment + (1|Plant), data=CO2))
tidy(lmer(uptake  ~  Type + Treatment + (1|Plant), data=CO2))
summary(lmer(uptake  ~  Type + Treatment + (1|Plant), data=CO2))
summary(lmer(uptake  ~  Type + Treatment + Type:Treatment + (1|Plant), data=CO2))
anova(lmer(uptake  ~  Type + Treatment + Type:Treatment + (1|Plant), data=CO2))
summary(anova(lmer(uptake  ~  Type + Treatment + Type:Treatment + (1|Plant), data=CO2)))
anova(lmer(uptake  ~  Type + Treatment + Type:Treatment + (1|Plant), data=CO2))
glance(anova(lmer(uptake  ~  Type + Treatment + Type:Treatment + (1|Plant), data=CO2)))
anova(lmer(uptake  ~  Type + Treatment + Type:Treatment + (1|Plant), data=CO2))
coef(lmer(uptake  ~  Type + Treatment + Type:Treatment + (1|Plant), data=CO2))
augment(lmer(uptake  ~  Type + Treatment + Type:Treatment + (1|Plant), data=CO2))
View(augment(lmer(uptake  ~  Type + Treatment + Type:Treatment + (1|Plant), data=CO2)))
summary(lmer(uptake  ~  Type + Treatment + Type:Treatment + conc + (1|Plant), data=CO2))
fit2 <- lmer(uptake  ~  Type + Treatment + Type:Treatment + conc + (1|Plant), data=CO2)
library(sjPlot)
sjp.lmer(fit2, type = "eff")
sjp.lmer(fit2)
summary(lmer(uptake  ~ Treatment + Type:Treatment+ (1|Type) + (1|Plant), data=CO2))
sjp.lmer(fit2, type = "pred", vars = c("Treatment", "Type"))
sjp.lmer(fit3, type = "pred", vars = c("conc","Treatment", "Type"))
fit2 <- lmer(uptake  ~  Type + Treatment + Type:Treatment + conc + (1|Plant), data=CO2)
fit3 <- lmer(uptake  ~ Treatment + Type:Treatment+ (1|Type) + (1|Plant), data=CO2)
sjp.lmer(fit3, type = "pred", vars = c("conc","Treatment", "Type"))
sjp.lmer(fit3, type = "pred", vars = c("Treatment", "Type"))
?sjp.lmer
sjp.lmer(fit2, type = "pred", vars = c("Treatment", "Type"), show.ci = TRUE)
sjp.lmer(fit2, type = "pred", vars = c("Treatment", "Type"), show.ci = TRUE, show.p = TRYE)
sjp.lmer(fit2, type = "pred", vars = c("Treatment", "Type"), show.ci = TRUE, show.p = TRUE)
plot_model(fit2, type = "pred", vars = c("Treatment", "Type"), show.ci = TRUE, show.p = TRUE)
?plot_model
plot_model(fit2, type = "pred", terms = c("Treatment", "Type"), show.ci = TRUE, show.p = TRUE)
plot_model(fit2, type = "pred", terms = c("Treatment", "Type"), show.ci = FALSE, show.p = TRUE)
plot_model(fit3, type = "pred", vars = c("conc","Treatment", "Type"))
plot_model(fit3, type = "pred", vars = c("conc","Treatment"))
plot_model(fit2, type = "pred", terms = c("conc","Treatment", "Type"))
plot_model(fit2, type = "pred", terms = c("conc","Treatment"))
fit2 <- lmer(uptake  ~  Type + Treatment + Type:Treatment + conc + (1|Plant), data=CO2)
fit3 <- lmer(uptake  ~ Treatment + Type:Treatment+ (1|Type) + (1|Plant), data=CO2)
plot_model(fit3, type = "pred", vars = c("Treatment", "Type"))
plot_model(fit3, type = "pred", vars = c("Treatment", "Type"))
plot_model(fit3, type = "pred", terms = c("Treatment", "Type"))
plot_model(fit3, type = "pred", terms = c("Type", "Treatment"))
plot_model(fit2, type = "pred", terms = c("conc","Treatment", "Type"))
plot_model(fit2, type = "pred", terms = c("Treatment", "Type"))
plot_model(fit3, type = "pred", terms = c("Type", "Treatment"))
plot_model(fit3, type = "pred", terms = c("Treatment", "Type"))
plot_model(fit2, type = "pred", terms = c("Treatment", "Type"))
plot_model(fit3, type = "pred", terms = c("Treatment", "Type"))
anova(fit2, fit3)
plot_model(fit3, type = "eff", terms = c("Treatment", "Type"))
plot_model(fit3, type = "eff")
?plot_model
plot_model(fit3, type = "pred", terms = c("Treatment", "Type"))
plot_model(fit3, type = "eff")
plot_model(fit3, type = "eff", terms = c("Treatment", "Type"))
plot_model(fit2, type = "eff", terms = c("Treatment", "Type"))
plot_model(fit2, type = "eff", terms = c("conc", "Type"))
aov(uptake  ~  Type + Treatment + Type:Treatment + Type/Plant, data=CO2)
summary(aov(uptake  ~  Type + Treatment + Type:Treatment + Type/Plant, data=CO2))
summary(aov(uptake  ~  Type + Treatment + Type:Treatment, data=CO2))
summary(aov(uptake  ~  Type + Treatment + Type:Treatment + Error(Type/Plant), data=CO2))
#Understanding ANOVA
library(tidyverse)
library(broom)
library(lme4)
data("CO2")
#Subespecie y tratamiento efectos fijos plnata efecto aleatorio
ggplot(CO2, aes(x = Plant, y = uptake)) + geom_boxplot() + geom_vline(xintercept = c(3.5, 9.5), lty = 2) + geom_vline(xintercept = 6.5, lty = 2, color = "red")
summary(aov(uptake  ~  Type + Treatment + Type:Treatment, data=CO2))
View(CO2)
Summary(CO2)
summary(CO2)
aov(uptake ~ Type + Treatmet, data=d)
aov(uptake ~ Type + Treatmet, data=CO2)
aov(uptake ~ Type + Treatment, data=CO2)
aov(uptake ~ Type *Treatment, data=CO2)
summary(aov(uptake ~ Type *Treatment, data=CO2))
summary(aov(uptake ~ Type + Treatment, data=CO2))
summary(aov(uptake ~ Treatment + Type/Plant, data=CO2))
summary(aov(uptake ~ Treatment * Type/Plant, data=CO2))
summary(aov(uptake ~ Treatment + Type/Plant, data=CO2))
summary(aov(uptake ~ Treatment + Type + Error(Plant), data=CO2))
summary(aov(uptake ~ Treatment*Type + Error(Plant), data=CO2))
summary(aov(uptake ~ Treatment*Type , data=CO2))
summary(aov(uptake ~ Treatment*Type + Error(Plant), data=CO2))
summary(aov(uptake ~ Treatment + Type/Error(Plant), data=CO2))
data(iris)
IRISANOVA <- aov(Sepal.Width ~ Species, data = iris)
summary(IRISANOVA)
ggplot(iris, aes(x = Species, y = Sepal.Width)) + geom_bar(aes(fill = Species)) + theme(legend.position = "bottom")
ggplot(iris, aes(x = Species, y = Sepal.Width)) + geom_boxplot(aes(fill = Species)) + theme(legend.position = "bottom")
?mtcars
datasets::ToothGrowth
ANOVA.AUTO <- aov(mpg ~ am + cyl + am:cyl)
summary(ANOVA.AUTO)
mt <- mtcars
mt$am <- ifelse(mt$am == 0, "Automatic", "Manual")
ANOVA.AUTO <- aov(mpg ~ am + cyl + am:cyl)
summary(ANOVA.AUTO)
ANOVA.AUTO <- aov(mpg ~ am + cyl + am:cyl, data = mt)
summary(ANOVA.AUTO)
ggplot(mt, aes(x = cyl, y = mpg)) + geom_boxplot(aes(fill = am)) + geom_jitter(aes(color = am))
ggplot(mt, aes(x = factor(cyl), y = mpg)) + geom_boxplot(aes(fill = am)) + geom_jitter(aes(color = am)) + xlab("cylinders")
mt <- mt %>% group_by(cyl, am) %>% summarise(MeanMPG = mean(mpg), SDMPG = sd(mpg)) %>% ungroup()
ggplot(mt, aes(x = factor(cyl), y = MeanMPG)) + geom_line(aes(color = am)) + geom_point(aes(color = am)) + xlab("cylinders") + theme_classic() + theme(legend.position = "bottom")
mt <- mt %>% group_by(cyl, am) %>% summarise(MeanMPG = mean(mpg), SDMPG = sd(mpg)) %>% ungroup()
ggplot(mt, aes(x = factor(cyl), y = MeanMPG)) + geom_line(aes(color = am)) + geom_point(aes(color = am)) + xlab("cylinders") + theme_classic() + theme(legend.position = "bottom")
mt <- mt %>% group_by(am, cyl) %>% summarise(MeanMPG = mean(mpg), SDMPG = sd(mpg)) %>% ungroup()
ggplot(mt, aes(x = factor(cyl), y = MeanMPG)) + geom_line(aes(color = am)) + geom_point(aes(color = am)) + xlab("cylinders") + theme_classic() + theme(legend.position = "bottom")
mt
mt <- mtcars
mt$am <- ifelse(mt$am == 0, "Automatic", "Manual")
ggplot(mt, aes(x = factor(cyl), y = mpg)) + geom_boxplot(aes(fill = am)) + geom_jitter(aes(color = am)) + xlab("cylinders") + theme_classic() + theme(legend.position = "bottom")
mt <- mt %>% group_by(am, cyl) %>% summarise(MeanMPG = mean(mpg), SDMPG = sd(mpg)) %>% ungroup()
mt
ggplot(mt, aes(x = factor(cyl), y = MeanMPG)) + geom_line(aes(color = am))
ggplot(mt, aes(x = am, y = MeanMPG)) + geom_line(aes(factor(cyl)))
ggplot(mt, aes(x = am, y = MeanMPG)) + geom_line(aes(color = factor(cyl))) + geom_point(aes(color = am)) + xlab("cylinders") + theme_classic() + theme(legend.position = "bottom")
ggplot(mt, aes(x = factor(cyl), y = MeanMPG))
ggplot(mt, aes(x = factor(cyl), y = MeanMPG)) + geom_line(aes(color = am))
ggplot(mt, aes(x = factor(cyl), y = MeanMPG)) + geom_line() + geom_point(aes(color = am)) + xlab("cylinders") + theme_classic() + theme(legend.position = "bottom")
ggplot(mt, aes(x = factor(cyl), y = MeanMPG)) + geom_line()
mt <- mt %>% group_by(am, cyl) %>% summarise(MeanMPG = mean(mpg), SDMPG = sd(mpg))
mt <- mtcars
mt$am <- ifelse(mt$am == 0, "Automatic", "Manual")
ggplot(mt, aes(x = factor(cyl), y = mpg)) + geom_boxplot(aes(fill = am)) + geom_jitter(aes(color = am)) + xlab("cylinders") + theme_classic() + theme(legend.position = "bottom")
mt <- mt %>% group_by(am, cyl) %>% summarise(MeanMPG = mean(mpg), SDMPG = sd(mpg))
ggplot(mt, aes(x = factor(cyl), y = MeanMPG)) + geom_line()
ggplot(mt, aes(x = factor(cyl), y = MeanMPG)) + geom_line(aes(color = am))
ggplot(mt, aes(x = factor(cyl), y = MeanMPG)) + geom_line(aes(color = am)) + geom_point(aes(color = am))
ggplot(mt, aes(x = factor(cyl), y = MeanMPG)) + geom_line(aes(color = am)) + geom_point(aes(color = am)) + xlab("cylinders") + theme_classic() + theme(legend.position = "bottom")
mt
ggplot(mt, aes(x = factor(cyl), y = MeanMPG)) + geom_line(aes(color = am))+ geom_errorbar(aes(ymin = MeanMPG - SDMPG, ymax = MeanMPG + SDMPG)) + geom_point(aes(color = am)) + xlab("cylinders") + theme_classic() + theme(legend.position = "bottom")
?geom_errorbar
ggplot(mt, aes(x = factor(cyl), y = MeanMPG)) + geom_line(aes(color = am))+ geom_errorbar(aes(ymin = MeanMPG - SDMPG, ymax = MeanMPG + SDMPG, color = am), width = 0.2) + geom_point(aes(color = am)) + xlab("cylinders") + theme_classic() + theme(legend.position = "bottom")
ANOVAUptake <- aov(uptake  ~  Type + Treatment + Type:Treatment + Type/Plant, data=CO2)
summary(ANOVAUptake)
ANOVAUptake <- aov(uptake  ~  Type + Treatment + Type:Treatment + Error(Type/Plant), data=CO2)
summary(ANOVAUptake)
View(CO2)
View(yarrr::poopdeck())
View(yarrr::poopdeck)
citation(yarrr)
citation("yarrr")
datasets::ToothGrowth
View(datasets::ToothGrowth)
Poopdeck <- yarrr::poopdeck
aov(time ~ type + cleaner + type:cleaner + Error(day), data = Poopdeck)
summary(aov(time ~ type + cleaner + type:cleaner + Error(day), data = Poopdeck))
summary(aov(time ~ type + cleaner + type:cleaner + Error(day), data = Poopdeck))
summary(aov(time ~ type + cleaner + type:cleaner, data = Poopdeck))
summary(aov(time ~ type + cleaner + type:cleaner, data = Poopdeck))
summary(aov(time ~ type + cleaner + type:cleaner + Error(day), data = Poopdeck))
library(tidyverse)
ggplot(Poopdeck, aes(x = cleaner, y = time)) + geom_boxplot(aes(fill = type))
library(tidyverse)
library(yarrr)
View(data("BeardLengths"))
View(data("auction"))
View(data("capture"))
data("BeardLengths")
View(BeardLengths)
data("auction")
View(auction)
ggplot(auction,aes(x = syle, y = price)) + geom_boxplot(aes(fill = color))
ggplot(auction,aes(x = style, y = price)) + geom_boxplot(aes(fill = color))
?auction
data("capture")
View(capture)
data("examscores")
View(examscores)
data("movies")
View(movies)
?movies
movies$genre
ggplot(movie, aes(x = genre, y = revenue.inf)) + geom_boxplot(aes(fill = creative.type))
ggplot(movies, aes(x = genre, y = revenue.inf)) + geom_boxplot(aes(fill = creative.type))
Mov <- movies %>% group_by(genre, creative.type, production.method) %>% summarise(Ganancia = mean(revenue.inf))
Mov
View(revenue)
View(mov)
Mov
View(Mov)
Mov <- movies %>% group_by(genre, creative.type, production.method) %>% summarise(Ganancia = mean(revenue.inf, rm.na = TRUE))
View(Mov)
Mov <- movies %>% group_by(genre, creative.type, production.method)
Mov
Mov <- movies %>% group_by(genre, creative.type, production.method) %>% summarise(Ganancia = mean(revenue.inf, rm.na = TRUE))
Mov2 <- movies %>% select(genre, creative.type, production.method, revenue.inf) %>% filter(complete.cases(.))
View(Mov2)
Mov2 <- movies %>% select(genre, creative.type, production.method, revenue.inf) %>% filter(complete.cases(.), N = n())
Mov2 <- movies %>% select(genre, creative.type, production.method, revenue.inf) %>% filter(complete.cases(.)) %>% summarise(Ganancia = mean(revenue.inf), N = n())
Mov2 <- movies %>% select(genre, creative.type, production.method, revenue.inf) %>% filter(complete.cases(.))%>% group_by(genre, creative.type, production.method) %>% summarise(Ganancia = mean(revenue.inf), N = n())
library(readr)
PanTHERIA_1_0_WR93_Aug2008 <- read_delim("http://esapubs.org/archive/ecol/E090/184/PanTHERIA_1-0_WR93_Aug2008.txt", "\t", escape_double = FALSE, na = -999, trim_ws = TRUE)
library(readr)
PanTHERIA_1_0_WR93_Aug2008 <- read_delim("http://esapubs.org/archive/ecol/E090/184/PanTHERIA_1-0_WR93_Aug2008.txt",
"\t", escape_double = FALSE, trim_ws = TRUE)
View(PanTHERIA_1_0_WR93_Aug2008)
PanTHERIA <-PanTHERIA_1_0_WR93_Aug2008
rm(PanTHERIA_1_0_WR93_Aug2008)
colnames(PanTHERIA)
sput(colnames(PanTHERIA))
dput(colnames(PanTHERIA))
PanTHERIA2 <- PanTHERIA %>% select(MSW93_Order, MSW93_Family, MSW93_Genus, MSW93_Binomial, 1-1_ActivityCycle, 5-1_AdultBodyMass_g, 7-1_DispersalAge_d, 9-1_GestationLen_d, 22-1_HomeRange_km2,14-1_InterBirthInterval_d, 15-1_LitterSize, 10-2_SocialGrpSize, 12-2_Terrestriality)
PanTHERIA2 <- PanTHERIA %>% select(MSW93_Order, MSW93_Family, MSW93_Genus, MSW93_Binomial, "1-1_ActivityCycle")
View(PanTHERIA2)
PanTHERIA2 <- PanTHERIA %>% select(MSW93_Order, MSW93_Family, MSW93_Genus, MSW93_Binomial, "1-1_ActivityCycle", "5-1_AdultBodyMass_g", "7-1_DispersalAge_d", "9-1_GestationLen_d", "22-1_HomeRange_km2","14-1_InterBirthInterval_d", "15-1_LitterSize", "10-2_SocialGrpSize", "12-2_Terrestriality")
View(PanTHERIA2)
unique(PanTHERIA2$`12-2_Terrestriality`)
PanTHERIA2 <- PanTHERIA %>% select(MSW93_Order, MSW93_Family, MSW93_Genus, MSW93_Binomial, "1-1_ActivityCycle", "10-2_SocialGrpSize", "12-2_Terrestriality")
PanTHERIA2 <- PanTHERIA %>% select(MSW93_Order, MSW93_Family, MSW93_Genus, MSW93_Binomial, "1-1_ActivityCycle", "10-2_SocialGrpSize", "12-2_Terrestriality") %>% rename(Order = MSW93_Order, Family = MSW93_Family, Genus = MSW93_Genus, Species = MSW93_Binomial, Cycle = "1-1_ActivityCycle", SocialGrpSize = "10-2_SocialGrpSize", Terrestriality = "12-2_Terrestriality")
PanTHERIA2 <- PanTHERIA %>% select(MSW93_Order, MSW93_Family, MSW93_Genus, MSW93_Binomial, "1-1_ActivityCycle", "10-2_SocialGrpSize", "12-2_Terrestriality") %>% rename(Order = MSW93_Order, Family = MSW93_Family, Genus = MSW93_Genus, Species = MSW93_Binomial, Cycle = "1-1_ActivityCycle", SocialGrpSize = "10-2_SocialGrpSize", Terrestriality = "12-2_Terrestriality")
PanTHERIA2$Cycle <- ifelse(PanTHERIA2$Cycle == 1, "Nocturnal",
ifelse(PanTHERIA2$Cycle == 2, "Crepuscular",
ifelse(PanTHERIA2$Cycle == 3, "Diurnal", NA)))
PanTHERIA2$SocialGrpSize <- ifelse(PanTHERIA2$SocialGrpSize == -999, NA, PanTHERIA2$SocialGrpSize)
PanTHERIA2 <- PanTHERIA %>% select(MSW93_Order, MSW93_Family, MSW93_Genus, MSW93_Binomial, "1-1_ActivityCycle", "10-2_SocialGrpSize", "6-2_TrophicLevel") %>% rename(Order = MSW93_Order, Family = MSW93_Family, Genus = MSW93_Genus, Species = MSW93_Binomial, Cycle = "1-1_ActivityCycle", SocialGrpSize = "10-2_SocialGrpSize", TrophicLevel = "6-2_TrophicLevel")
PanTHERIA2$Cycle <- ifelse(PanTHERIA2$Cycle == 1, "Nocturnal",
ifelse(PanTHERIA2$Cycle == 2, "Crepuscular",
ifelse(PanTHERIA2$Cycle == 3, "Diurnal", NA)))
PanTHERIA2$SocialGrpSize <- ifelse(PanTHERIA2$SocialGrpSize == -999, NA, PanTHERIA2$SocialGrpSize)
PanTHERIA2$TrophicLevel <- ifelse(PanTHERIA2$TrophicLevel == 1, "Herbivore",
ifelse(PanTHERIA2$TrophicLevel == 2, "Omnivore",
ifelse(PanTHERIA2$TrophicLevel == 3, "Carnivore", NA)))
PanTHERIA2 <- PanTHERIA2[complete.cases(PanTHERIA2)]
PanTHERIA2 <- PanTHERIA2[complete.cases(PanTHERIA2),]
View(PanTHERIA2 %>% group_by(Order, Cycle, TrophicLevel) %>% summarise(mean(SocialGrpSize)))
View(PanTHERIA2 %>% group_by(Order, Cycle, TrophicLevel) %>% summarise(mean(SocialGrpSize), n()))
ggplot(PanTHERIA2, aes(x = Cycle, y = SocialGrpSize)) + geom_boxplot(fill = TrophicLevel)
ggplot(PanTHERIA2, aes(x = Cycle, y = SocialGrpSize)) + geom_boxplot(aes(fill = TrophicLevel))
ggplot(PanTHERIA2, aes(x = Cycle, y = TrophicLevel)) + geom_boxplot(aes(fill = Cycle()))
ggplot(PanTHERIA2, aes(x = Cycle, y = TrophicLevel)) + geom_boxplot(aes(fill = Cycle))
ggplot(PanTHERIA2, aes(x = TrophicLevel, y = SocialGrpSize)) + geom_boxplot(aes(fill = Cycle))
ggplot(PanTHERIA2, aes(x = Cycle, y = SocialGrpSize)) + geom_boxplot(aes(fill = TrophicLevel))
ggplot(PanTHERIA2, aes(x = Cycle, y = SocialGrpSize)) + geom_boxplot(aes(fill = TrophicLevel)) + theme_classic()
aov(SocialGrpSize ~ Cycle + TrophicLevel + Cycle:TrophicLevel, data = PanTHERIA2)
PanTHERIA2 %>% group_by(Order) %>% summarise(mean(SocialGrpSize))
PanTHERIA2 %>% group_by(Order) %>% summarise(mean(SocialGrpSize), n())
View(PanTHERIA2 %>% group_by(Order) %>% summarise(mean(SocialGrpSize), n()))
PanTHERIA2 %>% group_by(Order) %>% summarise(mean(SocialGrpSize), N = n()) %>% filter(N < 4)
PanTHERIA2 %>% group_by(Order) %>% summarise(mean(SocialGrpSize), N = n()) %>% filter(N < 4)$Order
(PanTHERIA2 %>% group_by(Order) %>% summarise(mean(SocialGrpSize), N = n()) %>% filter(N < 4))$Order
dput((PanTHERIA2 %>% group_by(Order) %>% summarise(mean(SocialGrpSize), N = n()) %>% filter(N < 4))$Order)
PanTHERIA2 <- PanTHERIA2[complete.cases(PanTHERIA2)
PanTHERIA2 <- PanTHERIA2 %>% filter(!(Order %in% c("Dasyuromorphia", "Monotremata", "Notoryctemorphia", "Pholidota","Proboscidea", "Sirenia", "Tubulidentata")))
aov(SocialGrpSize ~ Cycle + TrophicLevel + Cycle:TrophicLevel, data = PanTHERIA2),]
PanTHERIA2 <- PanTHERIA2[complete.cases(PanTHERIA2)
PanTHERIA2 <- PanTHERIA2 %>% filter(!(Order %in% c("Dasyuromorphia", "Monotremata", "Notoryctemorphia", "Pholidota","Proboscidea", "Sirenia", "Tubulidentata")))
aov(SocialGrpSize ~ Cycle + TrophicLevel + Cycle:TrophicLevel, data = PanTHERIA2),]
PanTHERIA2 <- PanTHERIA2[complete.cases(PanTHERIA2)
PanTHERIA2 <- PanTHERIA2 %>% filter(!(Order %in% c("Dasyuromorphia", "Monotremata", "Notoryctemorphia", "Pholidota","Proboscidea", "Sirenia", "Tubulidentata")))
aov(SocialGrpSize ~ Cycle + TrophicLevel + Cycle:TrophicLevel, data = PanTHERIA2),]
PanTHERIA2 <- PanTHERIA2 %>% filter(!(Order %in% c("Dasyuromorphia", "Monotremata", "Notoryctemorphia", "Pholidota","Proboscidea", "Sirenia", "Tubulidentata")))
View(PanTHERIA2 %>% group_by(Order) %>% summarise(mean(SocialGrpSize), n()))
aov(SocialGrpSize ~ Cycle + TrophicLevel + Cycle:TrophicLevel, data = PanTHERIA2)
View(PanTHERIA2 %>% group_by(Family) %>% summarise(mean(SocialGrpSize), n()))
dput((PanTHERIA2 %>% group_by(Family) %>% summarise(mean(SocialGrpSize), N = n()) %>% filter(N < 4))$Order)
dput((PanTHERIA2 %>% group_by(Family) %>% summarise(mean(SocialGrpSize), N = n()) %>% filter(N < 4))$Family)
PanTHERIA2 <- PanTHERIA2 %>% filter(!(Family %in% c("Agoutidae", "Anomaluridae", "Bradypodidae", "Burramyidae",
"Camelidae", "Capromyidae", "Castoridae", "Caviidae", "Chinchillidae",
"Ctenomyidae", "Dasyproctidae", "Daubentoniidae", "Delphinidae",
"Emballonuridae", "Equidae", "Erinaceidae", "Eschrichtiidae",
"Felidae", "Geomyidae", "Giraffidae", "Herpestidae", "Hippopotamidae",
"Hydrochaeridae", "Hystricidae", "Megalonychidae", "Moschidae",
"Mustelidae", "Myocastoridae", "Myoxidae", "Octodontidae", "Peramelidae",
"Peroryctidae", "Petauridae", "Petromuridae", "Phalangeridae",
"Phascolarctidae", "Phocidae", "Platanistidae", "Procyonidae",
"Pseudocheiridae", "Pteropodidae", "Rhinocerotidae", "Solenodontidae",
"Talpidae", "Tapiridae", "Tarsiidae", "Tarsipedidae", "Tayassuidae",
"Thryonomyidae", "Tragulidae", "Vombatidae")))
aov(SocialGrpSize ~ Cycle*TrophicLevel*Order, data = PanTHERIA2)
summary(aov(SocialGrpSize ~ Cycle*TrophicLevel*Order, data = PanTHERIA2))
summary(aov(SocialGrpSize ~ Cycle*TrophicLevel*Order + Order/Family, data = PanTHERIA2))
getwd()
setwd(paste0(getwd(),"/Practico7"))
getwd()
write.csv(PanTHERIA2, "PanTHERIA.csv", row.names = FALSE)
summary(aov(SocialGrpSize ~ Cycle*TrophicLevel*Order + Order/Family, data = PanTHERIA2))
Mov2 <- movies %>% select(genre, creative.type, production.method, revenue.inf) %>% filter(complete.cases(.))%>% group_by(genre, creative.type, production.method) %>% summarise(Ganancia = mean(revenue.inf), N = n())
Mov2 <- movies %>% select(genre, creative.type, production.method, revenue.inf) %>% filter(complete.cases(.))
View(Mov2)
colnames(Movies)
colnames(movies)
Mov2 <- movies %>% select(name, genre, creative.type, production.method, revenue.inf) %>% filter(complete.cases(.))
View(Mov2)
colnames(Mov2)
aov(revenue.inf ~ genre*creative.type*production.method, data = Mov2)
summary(aov(revenue.inf ~ genre*creative.type*production.method, data = Mov2))
glance(aov(revenue.inf ~ genre*creative.type*production.method, data = Mov2))
broom::glance(aov(revenue.inf ~ genre*creative.type*production.method, data = Mov2))
data("pirates")
View(pirates)
?pirates
data("puzzles")
View(puzzles)
?puzzles
data("CAex")
View(CAex)
data("USCounties")
View(USCounties)
data("fruit")
View(fruit)
data("nasa")
View(nasa)
data("smiths")
View(smiths)
data("who")
View(who)
data("diamonds")
View(diamonds)
data("economics_long")
View(economics_long)
data("midwest")
View(midwest)
data("seals")
View(seals)
data("txhousing")
View(txhousing)
library(readr)
AnAge <- read_delim("AnAge", "\t", escape_double = FALSE,
trim_ws = TRUE)
View(AnAge)
colnames(AnAge)
AnAge2 <- AnAge %>% select(Kingdom, Phylyum, Class, Order, Family, Genus, Species, "Maximum longevity (yrs)")
AnAge2 <- AnAge %>% select(Kingdom, Phylum, Class, Order, Family, Genus, Species, "Maximum longevity (yrs)")
View(AnAge2)
Mov2
View(Mov2)
write.csv(Mov2, "Movies.csv", row.names = FALSE)
library(readr)
politeness_data <- read_csv("politeness_data.csv")
View(politeness_data)
aov(frequency ~ gender*attitude + Error(subject))
aov(frequency ~ gender*attitude + Error(subject), data = politeness_data)
summary(aov(frequency ~ gender*attitude + Error(subject), data = politeness_data))
summary(aov(frequency ~ gender*attitude + Error(subject) + Error(scenario), data = politeness_data))
summary(aov(frequency ~ gender*attitude + Error(gender/subject), data = politeness_data))
summary(aov(frequency ~ gender*attitude + Error(gender/subject), data = politeness_data))
ToothGrowth
data("poopdeck")
write.csv(poopdeck, "Poop.csv", row.names = FALSE)
summary(aov(frequency ~ gender*attitude + Error(gender/subject), data = politeness_data))
summary(aov(frequency ~ gender*attitude + Error(gender/subject*scenario), data = politeness_data))
summary(aov(frequency ~ gender*attitude, data = politeness_data))
summary(aov(frequency ~ gender*attitude + Error(gender/subject*scenario), data = politeness_data))
View(poopdeck)
library(tidyverse)
##Piratas y Cacas
Poop <- read_csv("Poop.csv")
summary(aov(time ~ type + cleaner + type:cleaner + Error(day), data = Poop))
##Data ToothGrowth
data("ToothGrowth")
ToothGrowth
?ToothGrowth
sumamary(aov(len ~ supp + dose + supp:dose, data = ToothGrowth))
summary(aov(len ~ supp + dose + supp:dose, data = ToothGrowth))
?ToothGrowth
View(ToothGrowth)
sample(c(1,2,3,4))
sample(c(1,2,3,4))
#1
summary(aov(len ~ supp + dose + supp:dose, data = ToothGrowth))
ggplot(ToothGrowth, aes(x = dose, y = supp)) + geom_boxplot(aes(fill = supp))
ggplot(ToothGrowth, aes(x = dose, y = len)) + geom_boxplot(aes(fill = supp))
ggplot(ToothGrowth, aes(x = dose, y = len)) + geom_boxplot()
ggplot(ToothGrowth, aes(x = factor(dose), y = len)) + geom_boxplot(aes(fill = supp))
ggplot(ToothGrowth, aes(x = factor(dose), y = len)) + geom_boxplot(aes(fill = supp)) + theme_classic()
?ToothGrowth
sample(c(1,2,3,4))
library(readr)
Movies <- read_csv("Movies.csv")
View(Movies)
summary(aov(revenue.inf ~ genre*creative.type*production.method, data = Movies))
sample(c(1,2,3,4))
movies
?movies
View(Movies)
library(readr)
PanTHERIA <- read_csv("PanTHERIA.csv")
View(PanTHERIA)
summary(aov(SocialGrpSize ~ Cycle*TrophicLevel*Order + Order/Family, data = PanTHERIA2))
summary(aov(SocialGrpSize ~ Cycle*TrophicLevel*Order + Order/Family + Family/Genus, data = PanTHERIA2))
sample(c(1,2,3,4))
#1
summary(aov(SocialGrpSize ~ Cycle*TrophicLevel*Order + Order/Family, data = PanTHERIA2))
sample(c(1,2,3,4))
data("CO2")
#Subespecie y tratamiento efectos fijos plnata efecto aleatorio
ggplot(CO2, aes(x = Plant, y = uptake)) + geom_boxplot() + geom_vline(xintercept = c(3.5, 9.5), lty = 2) + geom_vline(xintercept = 6.5, lty = 2, color = "red")
summary(lmer(uptake  ~  Type + Treatment + Type:Treatment + conc + (1|Plant), data=CO2))
anova(lmer(uptake  ~  Type + Treatment + Type:Treatment + (1|Plant), data=CO2))
summary(lmer(uptake  ~ Treatment + Type:Treatment+ (1|Type) + (1|Plant), data=CO2))
coef(lmer(uptake  ~  Type + Treatment + Type:Treatment + (1|Plant), data=CO2))
fit2 <- lmer(uptake  ~  Type + Treatment + Type:Treatment + conc + (1|Plant), data=CO2)
fit3 <- lmer(uptake  ~ Treatment + Type:Treatment+ (1|Type) + (1|Plant), data=CO2)
library(sjPlot)
#Understanding ANOVA
library(tidyverse)
library(broom)
library(lme4)
data("CO2")
#Subespecie y tratamiento efectos fijos plnata efecto aleatorio
ggplot(CO2, aes(x = Plant, y = uptake)) + geom_boxplot() + geom_vline(xintercept = c(3.5, 9.5), lty = 2) + geom_vline(xintercept = 6.5, lty = 2, color = "red")
summary(lmer(uptake  ~  Type + Treatment + Type:Treatment + conc + (1|Plant), data=CO2))
#Subespecie y tratamiento efectos fijos plnata efecto aleatorio
ggplot(CO2, aes(x = Plant, y = uptake)) + geom_boxplot() + geom_vline(xintercept = c(3.5, 9.5), lty = 2) + geom_vline(xintercept = 6.5, lty = 2, color = "red")
aov(uptake  ~  Type + Treatment + Type:Treatment + Type/Plant, data=CO2)
summary(aov(uptake  ~  Type + Treatment + Type:Treatment + Error(Type/Plant), data=CO2))
summary(aov(uptake  ~  Type + Treatment + Type:Treatment, data=CO2))
aov(uptake  ~  Type + Treatment + Type:Treatment + Type/Plant, data=CO2)
mt <- mtcars
mt$am <- ifelse(mt$am == 0, "Automatic", "Manual")
ggplot(mt, aes(x = factor(cyl), y = mpg)) + geom_boxplot(aes(fill = am)) + geom_jitter(aes(color = am)) + xlab("cylinders") + theme_classic() + theme(legend.position = "bottom")
mt <- mt %>% group_by(am, cyl) %>% summarise(MeanMPG = mean(mpg), SDMPG = sd(mpg))
ggplot(mt, aes(x = factor(cyl), y = MeanMPG)) + geom_line(aes(color = am))+ geom_errorbar(aes(ymin = MeanMPG - SDMPG, ymax = MeanMPG + SDMPG, color = am), width = 0.2) + geom_point(aes(color = am)) + xlab("cylinders") + theme_classic() + theme(legend.position = "bottom")
library(readr)
politeness_data <- read_csv("politeness_data.csv")
View(politeness_data)
summary(aov(frequency ~ gender, data = politeness_data))
summary(aov(frequency ~ gender + attitude + Error(subject), data = politeness_data))
summary(aov(frequency ~ gender*attitude*scenario + Error(subject), data = politeness_data))
summary(aov(frequency ~ gender*attitude*scenario, data = politeness_data))
summary(aov(frequency ~ gender*attitude*scenario + Error(gender/subject), data = politeness_data))
summary(aov(frequency ~ gender*attitude*scenario, data = politeness_data))
summary(aov(frequency ~ gender/subject*attitude*scenario, data = politeness_data))
summary(aov(frequency ~ gender/subject*attitude*scenario + Error(subject), data = politeness_data))
summary(aov(frequency ~ gender*attitude*scenario + Error(subject), data = politeness_data))
summary(aov(frequency ~ gender/subject*attitude*scenario, data = politeness_data))
summary(aov(frequency ~ gender/subject*attitude*scenario + Error(subject), data = politeness_data))
##1Piratas y Cacas
Poop <- read_csv("Poop.csv")
summary(aov(time ~ type + cleaner + type:cleaner + Error(day), data = Poop))
##2Data ToothGrowth
data("ToothGrowth")
View(ToothGrowth)
##1Piratas y Cacas
Poop <- read_csv("Poop.csv")
View(Poop)
summary(aov(time ~ type + cleaner + type:cleaner + Error(day), data = Poop))
#1
summary(aov(len ~ supp + dose + supp:dose, data = ToothGrowth))
ggplot(ToothGrowth, aes(x = factor(dose), y = len)) + geom_boxplot(aes(fill = supp))+ theme_classic()
#3Que tipo de peliculas ganan mas
Movies <- read_csv("Movies.csv")
View(Movies)
summary(aov(revenue.inf ~ genre*creative.type*production.method, data = Movies))
